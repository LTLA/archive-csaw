
R Under development (unstable) (2014-12-14 r67167) -- "Unsuffered Consequences"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-unknown-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # This tests the behaviour of the detailRanges function, by comparing the output of the
> # strings to the output of the function proper.
> 
> suppressPackageStartupMessages(require(csaw))
Warning message:
multiple methods tables found for ‘score’ 
> suppressPackageStartupMessages(require(TxDb.Mmusculus.UCSC.mm10.knownGene))
> suppressPackageStartupMessages(require(org.Mm.eg.db))
> source("simsam.R")
> require(parallel)
> 
> ########################################################################################
> # Checking the sensibility of the exon numbering, the promoters and gene bodies, in each case.
> 
> checkranges <- function(ref, up, down) {
+ 	exonic <- ref[ref$exon>=1L]
+ 	gb <- unlist(range(split(exonic, exonic$internal)))
+ 	test.gb <- ref[ref$exon==-1L]
+ 	names(test.gb) <- test.gb$internal
+ 	elementMetadata(test.gb) <- NULL
+ 	if (!identical(gb, test.gb)) { stop("differences in gene body identification") }
+ 
+ 	promoters <- ref[ref$exon==0L]
+  	first.exon <- ref[ref$exon==1L]
+ 	is.forward <- as.logical(strand(first.exon)=="+")
+ 	new.prom <- first.exon
+ 	suppressWarnings(start(new.prom) <- ifelse(is.forward, start(first.exon) - up, end(first.exon) - down + 1L))
+ 	suppressWarnings(end(new.prom) <- ifelse(is.forward, start(first.exon) + down - 1L, end(first.exon) + up))
+ 	new.prom <- trim(new.prom)
+ 	new.prom$exon <- 0L
+ 	if (!identical(new.prom, promoters)) { stop("differences in promoter identification") }
+ 
+ 	forward.exons <- exonic[strand(exonic)=="+"]
+ 	o <- order(forward.exons$internal, forward.exons$exon)
+ 	n <- length(o)
+ 	forward.exons <- forward.exons[o]
+ 	out.of.order <- c(FALSE, forward.exons$internal[-1]==forward.exons$internal[-n] & 
+ 		start(forward.exons)[-n] > start(forward.exons)[-1])
+ 	if (any(out.of.order)) { stop("exon ranking for forward-strand genes is incorrect") }
+ 
+ 	reverse.exons <- exonic[strand(exonic)=="-"]
+ 	o <- order(reverse.exons$internal, reverse.exons$exon)
+ 	n <- length(o)
+ 	reverse.exons <- reverse.exons[o]
+ 	out.of.order <- c(FALSE, reverse.exons$internal[-1]==reverse.exons$internal[-n] & 
+ 		end(reverse.exons)[-n] < end(reverse.exons)[-1])
+ 	if (any(out.of.order)) { stop("exon ranking for reverse-strand genes is incorrect") }
+ 	return(promoters)
+ }
> 
> up <- 3000
> down <- 1000
> ref <- detailRanges(txdb=TxDb.Mmusculus.UCSC.mm10.knownGene, orgdb=org.Mm.eg.db, promoter=c(up, down))
> checkranges(ref, up, down)
GRanges object with 23885 ranges and 3 metadata columns:
            seqnames                 ranges strand   |        symbol      exon
               <Rle>              <IRanges>  <Rle>   |   <character> <integer>
  100009600     chr9 [ 21074497,  21078496]      -   |         Zglp1         0
  100009609     chr7 [ 84963010,  84967009]      -   |       Vmn2r65         0
  100009614    chr10 [ 77708446,  77712445]      +   |       Gm10024         0
  100009664    chr11 [ 45805083,  45809082]      +   | F630206G17Rik         0
     100012     chr4 [144161652, 144165651]      -   |          Oog3         0
        ...      ...                    ...    ... ...           ...       ...
      99889     chr3 [ 85886519,  85890518]      -   |        Arfip1         0
      99890     chr3 [110250000, 110253999]      -   |         Prmt6         0
      99899     chr3 [151748960, 151752959]      -   |         Ifi44         0
      99929     chr3 [ 65525447,  65529446]      +   |        Tiparp         0
      99982     chr4 [136601724, 136605723]      -   |         Kdm1a         0
             internal
            <integer>
  100009600         1
  100009609         2
  100009614         3
  100009664         4
     100012         5
        ...       ...
      99889     23881
      99890     23882
      99899     23883
      99929     23884
      99982     23885
  -------
  seqinfo: 66 sequences (1 circular) from mm10 genome
> 
> up <- 2000
> down <- 500
> ref <- detailRanges(txdb=TxDb.Mmusculus.UCSC.mm10.knownGene, orgdb=org.Mm.eg.db, promoter=c(up, down))
> checkranges(ref, up, down)
GRanges object with 23885 ranges and 3 metadata columns:
            seqnames                 ranges strand   |        symbol      exon
               <Rle>              <IRanges>  <Rle>   |   <character> <integer>
  100009600     chr9 [ 21074997,  21077496]      -   |         Zglp1         0
  100009609     chr7 [ 84963510,  84966009]      -   |       Vmn2r65         0
  100009614    chr10 [ 77709446,  77711945]      +   |       Gm10024         0
  100009664    chr11 [ 45806083,  45808582]      +   | F630206G17Rik         0
     100012     chr4 [144162152, 144164651]      -   |          Oog3         0
        ...      ...                    ...    ... ...           ...       ...
      99889     chr3 [ 85887019,  85889518]      -   |        Arfip1         0
      99890     chr3 [110250500, 110252999]      -   |         Prmt6         0
      99899     chr3 [151749460, 151751959]      -   |         Ifi44         0
      99929     chr3 [ 65526447,  65528946]      +   |        Tiparp         0
      99982     chr4 [136602224, 136604723]      -   |         Kdm1a         0
             internal
            <integer>
  100009600         1
  100009609         2
  100009614         3
  100009664         4
     100012         5
        ...       ...
      99889     23881
      99890     23882
      99899     23883
      99929     23884
      99982     23885
  -------
  seqinfo: 66 sequences (1 circular) from mm10 genome
> 
> up <- 5000
> down <- 0
> ref <- detailRanges(txdb=TxDb.Mmusculus.UCSC.mm10.knownGene, orgdb=org.Mm.eg.db, promoter=c(up, down))
> checkranges(ref, up, down)
GRanges object with 23885 ranges and 3 metadata columns:
            seqnames                 ranges strand   |        symbol      exon
               <Rle>              <IRanges>  <Rle>   |   <character> <integer>
  100009600     chr9 [ 21075497,  21080496]      -   |         Zglp1         0
  100009609     chr7 [ 84964010,  84969009]      -   |       Vmn2r65         0
  100009614    chr10 [ 77706446,  77711445]      +   |       Gm10024         0
  100009664    chr11 [ 45803083,  45808082]      +   | F630206G17Rik         0
     100012     chr4 [144162652, 144167651]      -   |          Oog3         0
        ...      ...                    ...    ... ...           ...       ...
      99889     chr3 [ 85887519,  85892518]      -   |        Arfip1         0
      99890     chr3 [110251000, 110255999]      -   |         Prmt6         0
      99899     chr3 [151749960, 151754959]      -   |         Ifi44         0
      99929     chr3 [ 65523447,  65528446]      +   |        Tiparp         0
      99982     chr4 [136602724, 136607723]      -   |         Kdm1a         0
             internal
            <integer>
  100009600         1
  100009609         2
  100009614         3
  100009664         4
     100012         5
        ...       ...
      99889     23881
      99890     23882
      99899     23883
      99929     23884
      99982     23885
  -------
  seqinfo: 66 sequences (1 circular) from mm10 genome
> 
> ########################################################################################
> ### Making a comparator function, to check proper string construction.
> 
> comp <- function(incoming, up, down, dist=5000) {
+ 	ref <- detailRanges(txdb=TxDb.Mmusculus.UCSC.mm10.knownGene, orgdb=org.Mm.eg.db, promoter=c(up, down))
+ 	olap <- findOverlaps(incoming, ref)	
+ 	anno <- detailRanges(incoming, txdb=TxDb.Mmusculus.UCSC.mm10.knownGene, orgdb=org.Mm.eg.db, dist=dist, promoter=c(up, down))	
+ 
+ 	.getmode <- function(collected.modes) {
+ 		collected.modes <- sort(collected.modes)
+ 		if (collected.modes[1]==-1L) {
+ 			if (length(collected.modes)==1L) { curmode <- "I" } 
+ 			collected.modes <- collected.modes[-1]
+ 		}
+ 		if (length(collected.modes)) {
+ 			consec.start <- which(c(TRUE, diff(collected.modes)!=1L))
+ 			consec.end <- c(consec.start[-1] - 1L, length(collected.modes))
+ 			all.strings <- ifelse(consec.start==consec.end, collected.modes[consec.start], paste0(collected.modes[consec.start], "-", collected.modes[consec.end]	))
+ 			curmode <- paste(all.strings, collapse=",")
+ 		}
+ 		return(curmode)
+ 	}
+ 
+ 	# Checking overlaps.
+ 	relevants <- split(subjectHits(olap), queryHits(olap))
+ 	test.anno <- mclapply(names(relevants), FUN=function(it) { 
+ 		actual.index <- as.integer(it)
+ 		by.gene <- split(relevants[[it]], ref$internal[relevants[[it]]])
+ 		cur.anno <- anno$overlap[actual.index]
+ 
+ 		# Assembling the string based on what's going on.
+ 		for (g in names(by.gene)) { 
+ 			collected.modes <- ref$exon[by.gene[[g]]]
+ 			curmode <- .getmode(collected.modes)
+ 			fstring <- paste(ref$symbol[by.gene[[g]][1]], curmode, strand(ref[by.gene[[g]][1]]), sep="|") 
+ 			if (!grepl(fstring, cur.anno, fixed=TRUE)) {
+ 				print(fstring)
+ 				print(cur.anno)
+ 				stop("could not find overlap")
+ 			} 
+ 			cur.anno <- sub(fstring, "", cur.anno, fixed=TRUE)
+ 		}
+ 		return(cur.anno)
+ 	}, mc.cores=8)
+ 	stopifnot(all(nchar(gsub(",", "", unlist(test.anno)))==0L))
+ 
+ 	# Checking left and right overlaps.
+ 	for (mode in 1:2) { 
+ 		if (mode==1L) { 
+ 			test.anno <- anno$left
+ 			olap <- findOverlaps(GRanges(seqnames(incoming), IRanges(start(incoming)-dist, start(incoming)-1L)), ref)	
+ 			relevant.x <- split(subjectHits(olap), queryHits(olap)) 
+ 		} else {
+ 			test.anno <- anno$right
+ 			olap <- findOverlaps(GRanges(seqnames(incoming), IRanges(end(incoming)+1L, end(incoming)+dist)), ref)	
+ 			relevant.x <- split(subjectHits(olap), queryHits(olap)) 
+ 		}
+ 
+ 		new.anno <- mclapply(names(relevant.x), FUN=function(it) { 
+ 			actual.index <- as.integer(it)
+ 			relevant.x[[it]] <- setdiff(relevant.x[[it]], relevants[[it]]) # Getting rid of the centers.
+ 			by.gene <- split(relevant.x[[it]], ref$internal[relevant.x[[it]]])
+ 			cur.anno <- test.anno[actual.index]
+ 
+ 			# Assembling the string based on what's going on.
+ 			for (g in names(by.gene)) { 
+ 				chosen <- ref[by.gene[[g]]]
+ 				collected.modes <- chosen$exon
+ 				keep <- collected.modes > 0L
+ 				collected.modes <- collected.modes[keep]
+ 				chosen <- chosen[keep]
+ 				if (!any(keep)) { next }
+ 
+ 				curmode <- .getmode(collected.modes)
+ 				fstring <- paste(chosen$symbol[1], curmode, strand(chosen[1]), sep="|")
+ 				all.dist <- pmax(start(incoming[actual.index]), start(chosen)) - pmin(end(incoming[actual.index]), end(chosen))
+ 				if (any(all.dist <= 0L || all.dist > dist)) { stop("distances out of range") }
+ 				fstring <- paste0(fstring, "[", min(all.dist), "]")
+ 					
+ 				if (!grepl(fstring, cur.anno, fixed=TRUE)) {
+ 					print(fstring)
+ 					print(cur.anno)
+ 					stop("could not find flank")
+ 				} 
+ 				cur.anno <- sub(fstring, "", cur.anno, fixed=TRUE)
+ 			}
+ 			return(cur.anno)
+ 		}, mc.cores=8)
+ 		stopifnot(all(nchar(gsub(",", "", unlist(new.anno)))==0L))
+ 	}
+ 	
+ 	return(c(O=sum(nchar(anno$overlap)!=0L), L=sum(nchar(anno$left)!=0L), R=sum(nchar(anno$right)!=0L)))
+ }
> 
> set.seed(1847382)
> chromos <- seqlengths(ref)
> chromos <- chromos[chromos > 1e7]
> 
> all.win <- generateWindows(chromos*1.8, 1e2, 1000)
> comp(all.win, up=3000, down=1000)
  O   L   R 
841 371 403 
> 
> all.win <- generateWindows(chromos*1.8, 1e2, 2000)
> comp(all.win, up=3000, down=1000, dist=2000)
  O   L   R 
830 223 233 
> 
> all.win <- generateWindows(chromos*1.8, 1e2, 2000)
> comp(all.win, up=5000, down=500, dist=10000)
  O   L   R 
894 530 573 
> 
> ########################################################################################
> #### Checking key, name field options.
> 
> output <- detailRanges(all.win, txdb=TxDb.Mmusculus.UCSC.mm10.knownGene, 
+ 		    orgdb=org.Mm.eg.db, name.field=c("ENTREZID"))
> head(output$overlap, 30)
 [1] ""           ""           ""           ""           ""          
 [6] "320492|I|+" ""           ""           ""           ""          
[11] "241035|I|-" "226922|I|-" ""           "210933|I|-" "210933|0|-"
[16] ""           ""           ""           "19076|I|-"  "226970|I|+"
[21] "16764|I|-"  "18143|I|+"  ""           "70676|I|+"  ""          
[26] ""           ""           ""           ""           "81898|I|-" 
> 
> output <- detailRanges(all.win, txdb=TxDb.Mmusculus.UCSC.mm10.knownGene, 
+ 	    orgdb=org.Mm.eg.db, name.field=c("SYMBOL", "ENTREZID"))
> head(output$overlap, 30)
 [1] ""                         ""                        
 [3] ""                         ""                        
 [5] ""                         "A830018L16Rik;320492|I|+"
 [7] ""                         ""                        
 [9] ""                         ""                        
[11] "Pkhd1;241035|I|-"         "Kcnq5;226922|I|-"        
[13] ""                         "Bai3;210933|I|-"         
[15] "Bai3;210933|0|-"          ""                        
[17] ""                         ""                        
[19] "Prim2;19076|I|-"          "Arhgef4;226970|I|+"      
[21] "Aff3;16764|I|-"           "Npas2;18143|I|+"         
[23] ""                         "Gulp1;70676|I|+"         
[25] ""                         ""                        
[27] ""                         ""                        
[29] ""                         "Sf3b1;81898|I|-"         
> 
> suppressPackageStartupMessages(require(TxDb.Scerevisiae.UCSC.sacCer3.sgdGene))
> suppressPackageStartupMessages(require(org.Sc.sgd.db))
> 
> allr <-detailRanges(txdb=TxDb.Scerevisiae.UCSC.sacCer3.sgdGene, orgdb=org.Sc.sgd.db, key.field='ORF', name.field='GENENAME')
> allr
GRanges object with 20102 ranges and 3 metadata columns:
            seqnames           ranges strand   |      symbol      exon
               <Rle>        <IRanges>  <Rle>   | <character> <integer>
      Q0010     chrM   [ 3952,  4338]      +   |     <Q0010>         1
      Q0010     chrM   [ 4254,  4415]      +   |     <Q0010>         2
      Q0032     chrM   [11667, 11957]      +   |     <Q0032>         1
      Q0055     chrM   [13818, 13986]      +   |         AI2         1
      Q0055     chrM   [13818, 16322]      +   |         AI2         2
        ...      ...              ...    ... ...         ...       ...
    YPR200C   chrXVI [939279, 939671]      -   |        ARR2        -1
    YPR201W   chrXVI [939922, 941136]      +   |        ARR3        -1
    YPR202W   chrXVI [943032, 944188]      +   |   <YPR202W>        -1
  YPR204C-A   chrXVI [946856, 947338]      -   | <YPR204C-A>        -1
    YPR204W   chrXVI [944603, 947701]      +   |   <YPR204W>        -1
             internal
            <integer>
      Q0010         1
      Q0010         1
      Q0032         2
      Q0055         3
      Q0055         3
        ...       ...
    YPR200C      6530
    YPR201W      6531
    YPR202W      6532
  YPR204C-A      6533
    YPR204W      6534
  -------
  seqinfo: 17 sequences (1 circular) from sacCer3 genome
> 
> ########################################################################################
> ########################################################################################
> ########################################################################################
> # End.
> 
> proc.time()
   user  system elapsed 
278.860   9.693  98.648 
