
R version 3.2.0 (2015-04-16) -- "Full of Ingredients"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-unknown-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ###################################################################################################
> # This script tests the PE-analysis capabilities of the 'csaw' package.
> 
> suppressWarnings(suppressPackageStartupMessages(library(csaw)))
> 
> source("simsam.R")
> dir<-"pe-test"
> dir.create(dir)
> options(width=120)
> 
> checkcount<-function (npairs, nsingles, chromosomes, spacing=50, max.frag=500, left=0, right=0, filter=-1, ext=100) {
+ 	stuff<-file.path(dir, paste("x", 1:2, sep=""))
+ 	firsts <- seconds <- singles <- list()
+ 	rlen <- 10L
+ 	storage.mode(chromosomes) <- "integer"
+ 
+ 	for (x in 1:length(stuff)) {
+     	# Seeding all reads.
+ 		names<-paste('x', rep(1:npairs, 2), sep=".");
+ 		chrs<-sample(length(chromosomes), length(names), replace=TRUE)
+ 		pos<-rep(0, length(names));
+ 
+ 		# Assigning positions to all of them.
+ 		for (i in 1:length(chromosomes)) {
+ 			current<-chrs==i;
+ 			pos[current]<-round(runif(sum(current), 1, chromosomes[i]))
+ 		}
+ 
+     	# Throwing them into the SAM file generator. 
+ 		str<-rbinom(npairs*2, 1, 0.5)==1L 
+ 		reversi<-c(1:npairs+npairs, 1:npairs)
+ 		mapq <- as.integer(runif(npairs*2, 50, 199))
+ 		dup <- rbinom(npairs*2, 1, 0.8)==0L
+ 		current.chrs <- names(chromosomes)[chrs]
+ 		out<-simsam(stuff[x], current.chrs, pos, str, chromosomes, names=names, 
+ 				is.first=c(rep(TRUE, npairs), rep(FALSE, npairs)), is.paired=TRUE, 
+ 				mate.chr=names(chromosomes)[chrs][reversi], mate.pos=pos[reversi], 
+ 				mate.str=str[reversi], len=rlen, mapq=mapq, is.dup=dup)
+ 
+ 		everything <- GRanges(current.chrs, IRanges(pos, pos+rlen-1), strand=!str)
+ 		everything$mapq <- mapq
+ 		everything$dup <- dup
+ 		firsts[[x]] <- everything[1:npairs]
+ 		seconds[[x]] <- everything[1:npairs + npairs]
+ 
+ 		# Adding singles.
+ 		if (nsingles) {
+ 			snames <- paste('y', 1:nsingles, sep=".")
+             schrs <- sample(length(chromosomes), nsingles, replace=TRUE)
+ 		    spos <- numeric(nsingles)
+ 		    for (i in 1:length(chromosomes)) {
+ 				scurrent<-schrs==i;
+ 				spos[scurrent]<-round(runif(sum(scurrent), 1, chromosomes[i]))
+ 			}
+ 			sstr<-rnbinom(nsingles, 1, 0.5)==1L
+ 				
+ 			mapq <- as.integer(runif(nsingles, 50, 199))
+ 			dup <- rbinom(nsingles, 1, 0.8)==0L
+ 			single.chrs <- names(chromosomes)[schrs]
+ 			singles[[x]] <- GRanges(single.chrs, IRanges(spos, spos+rlen-1L), strand=!sstr)
+ 			singles[[x]]$mapq <- mapq
+ 			singles[[x]]$dup <- dup
+ 			
+ 			tempname<-file.path(dir, "temp")
+ 			out2<-simsam(tempname, single.chrs, spos, sstr, chromosomes, names=snames, len=rlen, mapq=mapq, is.dup=dup)
+ 			more.temp<-file.path(dir, "temp2")
+ 			file.rename(out, more.temp)
+ 			out<-mergeBam(c(more.temp, out2), out, indexDestination=TRUE, overwrite=TRUE)
+ 		}
+ 	}
+ 	
+ 	# Looping through a number of possible filters.
+ 	discard <- GRanges()
+ 	restrict <- NULL
+ 	fnames <- paste0(stuff, ".bam")
+ 	for (filter in 1:4) {
+ 		if (filter==1L) {
+ 			dedup <- TRUE
+ 			minq <- 100L
+ 		} else if (filter==2L) {
+ 			dedup <- FALSE
+ 			minq <- 0L
+ 		} else if (filter==3L) {
+ 			discard <- makeDiscard(10, 50, chromosomes)
+ 		} else {
+ 			discard <- GRanges()
+ 			restrict <- "chrA"
+ 		}
+ 
+     	# Looping through a number of possible extraction scenarios.
+ 		for (mode in 1:3) {
+ 			if (mode==1L) {
+ 				rescue.ext <- NA
+ 				pe <- "both"
+ 			} else if (mode==2L) {
+ 				rescue.ext <- ext
+ 			} else if (mode==3L) {
+ 				pe <- "first"
+ 			}
+ 
+ 			# Loading windowCounts.
+ 			rpam <- readParam(pe=pe, rescue.ext=rescue.ext, max.frag=max.frag, 
+ 				discard=discard, minq=minq, dedup=dedup, restrict=restrict)
+ 			x <- windowCounts(fnames, spacing=spacing, ext=ext, shift=left, 
+ 				width=right+left+1, filter=0, param=rpam)
+ 
+ 			counts <- matrix(0L, nrow=nrow(x), ncol=length(fnames))
+ 			totals <- integer(length(fnames))
+ 			for (lib in 1:length(fnames)) { 
+ 				pos1 <- start(firsts[[lib]])
+ 				chr1 <- as.character(seqnames(firsts[[lib]]))
+ 				str1 <- as.logical(strand(firsts[[lib]])=="+")
+ 				pos2 <- start(seconds[[lib]])
+ 				chr2 <- as.character(seqnames(seconds[[lib]]))
+ 				str2 <- as.logical(strand(seconds[[lib]])=="+")
+ 
+ 				valid <- chr1==chr2 & str1!=str2 & ifelse(str1, pos1 <= pos2, pos2 <= pos1)
+ 		   		pos1[!str1] <- pmin(pos1[!str1]+rlen, chromosomes[chr1][!str1]+1L)
+ 				pos2[!str2] <- pmin(pos2[!str2]+rlen, chromosomes[chr2][!str2]+1L)
+    				sizes<-abs(pos1-pos2)
+ 
+ 				# Checking which ones are lost.
+ 				keep1 <- (!dedup | !firsts[[lib]]$dup) & firsts[[lib]]$mapq >= minq
+ 				keep2 <- (!dedup | !seconds[[lib]]$dup) & seconds[[lib]]$mapq >= minq
+ 				if (length(discard)) { 
+ 					keep1 <- keep1 & !overlapsAny(firsts[[lib]], discard, type="within")
+ 					keep2 <- keep2 & !overlapsAny(seconds[[lib]], discard, type="within")
+ 				} 
+ 				if (!is.null(restrict)) { 
+ 					keep1 <- keep1 & chr1 %in% restrict
+ 					keep2 <- keep2 & chr2 %in% restrict
+ 				}
+ 				paired <- keep1 & keep2
+ 
+ 				# Checking singles.
+ 				if (nsingles) {
+ 					skeep <- (!dedup | !singles[[lib]]$dup) & singles[[lib]]$mapq >= minq
+ 					if (!is.null(discard)) { skeep <- skeep & !overlapsAny(singles[[lib]], discard, type="within") } 
+ 					if (!is.null(restrict)) { skeep <- skeep & as.character(seqnames(singles[[lib]])) %in% restrict }
+ 				} else { 
+ 					skeep <- NULL 
+ 				}
+ 	
+ 				###############################################
+ 				# Checking diagnostics.
+ 				if (mode==1L) { 
+ 		        	stuff<-getPESizes(fnames[lib], readParam(pe="both", minq=minq, dedup=dedup, restrict=restrict, discard=discard))
+ 					if (stuff$diagnostics[["single"]]!=sum(skeep)) { 
+ 						stop("mismatch in number of singles")
+ 					} else if (stuff$diagnostics[["total.reads"]]!=npairs*2L+nsingles) {
+ 						stop("mismatch in total number of reads")
+ 					} else if (stuff$diagnostics[["mapped.reads"]]!=sum(keep1)+sum(keep2)+sum(skeep)) {
+ 						stop("mismatch in number of mapped reads")
+ 					}
+ 			        if (sum(paired & chr1!=chr2)!=stuff$diagnostics[["inter.chr"]]) { stop("mismatch in interchromosomal PEs") }
+ 			        if (sum(paired & chr1==chr2 & !valid)!=stuff$diagnostics[["unoriented"]]) { stop("mismatch in invalid numbers") }
+ 			        if (sum(keep1!=keep2)!=stuff$diagnostics[["mate.unmapped"]]) { stop("mismatch in unmapped numbers") }
+ 			        if (!identical(sort(sizes[valid&paired]), sort(stuff$sizes))) { stop("mismatch in sizes"); }
+ 					if (lib==1L) { print(stuff$diagnostics) }
+ 				}
+ 
+ 				###############################################
+ 				# Now, counting; going through and seeing up the valid paired ones.
+ 
+ 				leftpos <- pmin(pos1, pos2)
+ 				valid <- valid & sizes <= max.frag
+ 				if (pe=="both") {
+ 					pairedness <- GRanges(chr1, IRanges(leftpos, leftpos+sizes-1))[valid & paired]
+ 					if (!is.na(rescue.ext)) {
+ 						# We pick the first if the second is inactive, if paired but interchromosomal, or if paired and intrachromosomal
+ 						# and otherwise invalid and has higher mapping quality.
+ 						better <- firsts[[lib]]$mapq > seconds[[lib]]$mapq
+ 						fcopy <- resize(firsts[[lib]][keep1 & (!keep2 | chr1!=chr2 | (!valid & better))], width=ext)
+ 						fcopy$mapq <- fcopy$dup <- NULL
+ 						scopy <- resize(seconds[[lib]][keep2 & (!keep1 | chr1!=chr2 | (!valid & !better))], width=ext)
+ 						scopy$mapq <- scopy$dup <- NULL
+ 						pairedness <- c(pairedness, fcopy, scopy)
+ 					}
+ 				} else {
+ 					pairedness <- resize(firsts[[lib]][keep1], width=ext)
+ 				}
+ 				counts[,lib] <- countOverlaps(rowRanges(x), pairedness)
+ 				totals[lib] <- length(pairedness)
+ 			}
+ #			print(c(totals, x$totals))
+ #			print(which(counts!=x$counts))
+ #			print(is.integer(counts))
+ #			print(is.integer(x$counts))
+ #			print(head(counts))
+ #			print(head(x$counts))
+ 
+ 			curcounts <- assay(x)
+ 			attributes(curcounts)$dimnames <- NULL
+ 			if (!identical(counts, curcounts)) { stop('mismatches in counts for paired data') }
+ 			if (!identical(totals, x$totals)) { stop("mismatches in totals for paired data") }
+ 
+ 			# Comparing windowCounts to regionCounts.
+ 			x2 <- regionCounts(fnames, regions=rowRanges(x), ext=ext, param=rpam)
+ 			stopifnot(identical(assay(x), assay(x2)))
+ 			stopifnot(identical(colData(x), colData(x2)))
+ 			stopifnot(identical(rowRanges(x), rowRanges(x2)))
+ 
+ 			# Comparing regionCounts to extractReads, using the middle region.
+ 			chosen <- round(nrow(x)/2)
+ 			my.reg <- rowRanges(x)[chosen]
+ 			if (rpam$pe=="both") {
+ 				for (f in 1:length(fnames)) {
+ 					collected <- extractReads(fnames[f], my.reg, param=rpam)
+ 					if (!identical(assay(x)[chosen,f], length(collected))) {
+ 						stop("mismatch in the number of fragments from extractReads")
+ 					}
+ 				}
+ 			} else {
+ 				for (f in 1:length(fnames)) {
+ 					collected <- extractReads(fnames[f], my.reg, param=rpam, ext=ext)
+ 					if (!identical(assay(x)[chosen,f], length(collected))) { 
+ 						stop("mismatch in the number of single reads from extractReads")
+ 					}
+ 				}
+ 			}
+ 
+ 			# Comparing to what happens after dumping them and reloading them with fast.pe=TRUE.
+ 			if (rpam$pe=="both") { 
+ 				fast.param <- reform(rpam, fast.pe=TRUE)
+ 				dumped <- list()
+ 				for (lib in 1:length(fnames)) { 
+ 					refix <- file.path(dir, paste0("dump_", sub('\\.bam$','', basename(fnames[lib]))))
+ 					dumped[[lib]] <- dumpPE(fnames[lib], refix, param=fast.param, overwrite=TRUE)
+ 				}
+ 				fast.out <- windowCounts(unlist(dumped), spacing=spacing, ext=ext, shift=left, 
+ 					width=right+left+1, filter=0, param=fast.param)
+ 				if (!identical(fast.out$totals, x$totals)) { stop("mismatches in totals upon fast PE extraction") }
+ 				if (!identical(assay(fast.out), assay(x))) { stop("mismatches in counts upon fast PE extraction") }
+ 
+ 				# Checking behaviour with `with.reads=TRUE`, to avoid having to check other functions with PE data.
+ 				where <- GRanges(names(chromosomes)[1], IRanges(1, chromosomes[1]))
+ 				extracted.reads <- csaw:::.getPairedEnd(fnames[1], where=where, param=rpam, with.reads=TRUE)
+ 				fast.extracted <- csaw:::.getPairedEnd(dumped[[1]], where=where, param=fast.param, with.reads=TRUE)
+ 
+ 				for (ref in list(extracted.reads, fast.extracted)) { 
+ 					paired <- 1:length(ref$left$pos)
+ 					endpoint <- ref$pos[paired] + ref$size[paired]
+ 					if (!identical(ref$pos[paired], ref$left$pos) || 
+ 							any(endpoint <= ref$right$pos) || 
+ 							any(endpoint > ref$right$pos + ref$right$qwidth) || 
+ 							any(ref$left$pos > ref$right$pos)) { 
+ 						stop("inconsistent read intervals reported for pairs") 
+ 					}	
+ 					if (!is.na(rpam$rescue.ext)) { 
+ 						rescued <- length(ref$left$pos) + 1:length(ref$rescued$pos)
+ 						is.forward <- ref$rescued$strand == "+"
+ 						endpoint <- ref$pos[rescued] + ref$size[rescued]
+ 						if (!identical(ref$pos[rescued][is.forward], ref$rescued$pos[is.forward]) ||
+ 								any(endpoint[!is.forward] <= ref$rescued$pos[!is.forward]) ||
+ 								any(endpoint[!is.forward] > ref$rescued$pos[!is.forward] + ref$rescued$qwidth[!is.forward]) ||
+ 								any(ref$pos[rescued][!is.forward] > ref$rescued$pos[!is.forward]) ||
+ 								any(ref$rescued$pos <= 0L)) { 
+ 							stop("inconsistent read intervals reported for rescued pairs") 
+ 						}
+ 					}
+ 				}
+ 
+ 				# Comparing fast and slow extraction of a dumped file.
+ 				for (type in c("left", "right", "rescued")) { 
+ 					curslow <- extracted.reads[[type]]
+ 					curfast <- fast.extracted[[type]]
+ 					stopifnot(is.null(curslow)==is.null(curfast))
+ 					if (is.null(curslow)) { next }
+ 
+ 					os <- order(curslow$pos, curslow$qwidth, curslow$strand)
+ 					of <- order(curfast$pos, curfast$qwidth, curfast$strand)
+ 					if (!identical(curslow$pos[os], curfast$pos[of]) ||
+ 							!identical(curslow$qwidth[os], curfast$qwidth[of]) ||
+ 							!identical(curslow$strand[os], curfast$strand[of])) {
+ 						stop("mismatches in extracted reads between fast and slow modes") 
+ 					}
+ 				}
+ 				stopifnot(length(extracted.reads$pos)==length(fast.extracted$pos))
+ 				stopifnot(length(extracted.reads$size)==length(fast.extracted$size))
+ 				
+ 				unlink(unlist(dumped))
+ 			}
+ 		}
+ 	}
+ 
+ 	# Checking what happens if you load fast.pe=TRUE on the raw files.
+ 	where <- GRanges(names(chromosomes)[1], IRanges(1, chromosomes[1]))
+ 	stopifnot(!csaw:::.isDumpedBam(fnames[1]))
+ 	extracted.reads <- csaw:::.getPairedEnd(fnames[1], where=where, 
+ 		param=readParam(pe="both", fast.pe=TRUE), with.reads=TRUE)
+ 	if (!identical(extracted.reads$pos, extracted.reads$left$pos) || 
+ 			!identical(extracted.reads$size, extracted.reads$right$pos + extracted.reads$right$qwidth - extracted.reads$left$pos)) {
+ 		print(cbind(extracted.reads$size, extracted.reads$right$pos + extracted.reads$right$qwidth - extracted.reads$left$pos))
+ 		print(extracted.reads)
+ 		stop("lengths and widths of rapidly extracted reads don't match up")
+ 	}
+ 
+ 	return(rowRanges(x))
+ }
> 
> # Running through a bunch of tests.
> 
> set.seed(3429201)
> checkcount(1000, 50, c(chrA=1000, chrB=2000), spacing=20)
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         2050          1088            24           506           109           134 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         2050          2050            50             0           357           506 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         2050          1839            45           182           292           400 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         2050          1020            24           506           182             0 
GRanges object with 50 ranges and 0 metadata columns:
       seqnames     ranges strand
          <Rle>  <IRanges>  <Rle>
   [1]     chrA   [ 1,  1]      *
   [2]     chrA   [21, 21]      *
   [3]     chrA   [41, 41]      *
   [4]     chrA   [61, 61]      *
   [5]     chrA   [81, 81]      *
   ...      ...        ...    ...
  [46]     chrA [901, 901]      *
  [47]     chrA [921, 921]      *
  [48]     chrA [941, 941]      *
  [49]     chrA [961, 961]      *
  [50]     chrA [981, 981]      *
  -------
  seqinfo: 1 sequence from an unspecified genome
> 
> checkcount(2000, 0, c(chrA=1000, chrB=2000), spacing=50)
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         4000          2150             0          1012           202           283 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         4000          4000             0             0           732          1008 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         4000          3415             0           515           550           714 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         4000          1978             0          1008           361             0 
GRanges object with 20 ranges and 0 metadata columns:
       seqnames     ranges strand
          <Rle>  <IRanges>  <Rle>
   [1]     chrA [  1,   1]      *
   [2]     chrA [ 51,  51]      *
   [3]     chrA [101, 101]      *
   [4]     chrA [151, 151]      *
   [5]     chrA [201, 201]      *
   ...      ...        ...    ...
  [16]     chrA [751, 751]      *
  [17]     chrA [801, 801]      *
  [18]     chrA [851, 851]      *
  [19]     chrA [901, 901]      *
  [20]     chrA [951, 951]      *
  -------
  seqinfo: 1 sequence from an unspecified genome
> 
> checkcount(5000, 25, c(chrA=1000, chrB=2000), spacing=25)
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
        10025          5333            12          2465           509           732 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
        10025         10025            25             0          1816          2537 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
        10025          8831            23          1056          1397          1957 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
        10025          4945            10          2537           874             0 
GRanges object with 40 ranges and 0 metadata columns:
       seqnames     ranges strand
          <Rle>  <IRanges>  <Rle>
   [1]     chrA [  1,   1]      *
   [2]     chrA [ 26,  26]      *
   [3]     chrA [ 51,  51]      *
   [4]     chrA [ 76,  76]      *
   [5]     chrA [101, 101]      *
   ...      ...        ...    ...
  [36]     chrA [876, 876]      *
  [37]     chrA [901, 901]      *
  [38]     chrA [926, 926]      *
  [39]     chrA [951, 951]      *
  [40]     chrA [976, 976]      *
  -------
  seqinfo: 1 sequence from an unspecified genome
> 
> checkcount(5000, 10, c(chrA=1000, chrB=2000), spacing=25, max.frag=100)
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
        10010          5366             5          2485           545           709 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
        10010         10010            10             0          1898          2467 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
        10010          8313             6          1395          1306          1722 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
        10010          5027             4          2467           952             0 
GRanges object with 40 ranges and 0 metadata columns:
       seqnames     ranges strand
          <Rle>  <IRanges>  <Rle>
   [1]     chrA [  1,   1]      *
   [2]     chrA [ 26,  26]      *
   [3]     chrA [ 51,  51]      *
   [4]     chrA [ 76,  76]      *
   [5]     chrA [101, 101]      *
   ...      ...        ...    ...
  [36]     chrA [876, 876]      *
  [37]     chrA [901, 901]      *
  [38]     chrA [926, 926]      *
  [39]     chrA [951, 951]      *
  [40]     chrA [976, 976]      *
  -------
  seqinfo: 1 sequence from an unspecified genome
> 
> # Checking out restrictions on the max size.
> 
> checkcount(1000, 10, c(chrA=1000, chrB=2000), spacing=50, right=0)
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         2010          1065             2           505            96           139 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         2010          2010            10             0           351           520 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         2010          1645             9           310           247           328 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         2010          1016             6           520           182             0 
GRanges object with 20 ranges and 0 metadata columns:
       seqnames     ranges strand
          <Rle>  <IRanges>  <Rle>
   [1]     chrA [  1,   1]      *
   [2]     chrA [ 51,  51]      *
   [3]     chrA [101, 101]      *
   [4]     chrA [151, 151]      *
   [5]     chrA [201, 201]      *
   ...      ...        ...    ...
  [16]     chrA [751, 751]      *
  [17]     chrA [801, 801]      *
  [18]     chrA [851, 851]      *
  [19]     chrA [901, 901]      *
  [20]     chrA [951, 951]      *
  -------
  seqinfo: 1 sequence from an unspecified genome
> 
> checkcount(1000, 20, c(chrA=1000, chrB=2000), spacing=100, right=20)
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         2020          1116            11           495           112           158 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         2020          2020            20             0           376           510 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         2020          1732            19           251           281           366 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         2020           979            15           510           176             0 
GRanges object with 10 ranges and 0 metadata columns:
       seqnames     ranges strand
          <Rle>  <IRanges>  <Rle>
   [1]     chrA [  1,  21]      *
   [2]     chrA [101, 121]      *
   [3]     chrA [201, 221]      *
   [4]     chrA [301, 321]      *
   [5]     chrA [401, 421]      *
   [6]     chrA [501, 521]      *
   [7]     chrA [601, 621]      *
   [8]     chrA [701, 721]      *
   [9]     chrA [801, 821]      *
  [10]     chrA [901, 921]      *
  -------
  seqinfo: 1 sequence from an unspecified genome
> 
> checkcount(2000, 50, c(chrA=1000, chrB=2000), spacing=100, right=10, max.frag=200)
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         4050          2129            25           988           210           281 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         4050          4050            50             0           722          1005 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         4050          3555            44           433           572           752 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         4050          2000            21          1005           365             0 
GRanges object with 10 ranges and 0 metadata columns:
       seqnames     ranges strand
          <Rle>  <IRanges>  <Rle>
   [1]     chrA [  1,  11]      *
   [2]     chrA [101, 111]      *
   [3]     chrA [201, 211]      *
   [4]     chrA [301, 311]      *
   [5]     chrA [401, 411]      *
   [6]     chrA [501, 511]      *
   [7]     chrA [601, 611]      *
   [8]     chrA [701, 711]      *
   [9]     chrA [801, 811]      *
  [10]     chrA [901, 911]      *
  -------
  seqinfo: 1 sequence from an unspecified genome
> 
> # Checking out window extension details.
> 
> checkcount(1000, 100, c(chrA=1000, chrB=2000), spacing=30, right=100)
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         2100          1092            55           483           100           137 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         2100          2100           100             0           377           476 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         2100          1837            89           222           299           347 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         2100          1040            62           476           180             0 
GRanges object with 34 ranges and 0 metadata columns:
       seqnames      ranges strand
          <Rle>   <IRanges>  <Rle>
   [1]     chrA  [  1, 101]      *
   [2]     chrA  [ 31, 131]      *
   [3]     chrA  [ 61, 161]      *
   [4]     chrA  [ 91, 191]      *
   [5]     chrA  [121, 221]      *
   ...      ...         ...    ...
  [30]     chrA [871,  971]      *
  [31]     chrA [901, 1000]      *
  [32]     chrA [931, 1000]      *
  [33]     chrA [961, 1000]      *
  [34]     chrA [991, 1000]      *
  -------
  seqinfo: 1 sequence from an unspecified genome
> 
> checkcount(1000, 0, c(chrA=1000, chrB=2000), spacing=20, left=10)
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         2000          1062             0           512           107           131 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         2000          2000             0             0           373           489 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         2000          1693             0           263           269           342 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         2000           985             0           489           189             0 
GRanges object with 51 ranges and 0 metadata columns:
       seqnames      ranges strand
          <Rle>   <IRanges>  <Rle>
   [1]     chrA    [ 1,  1]      *
   [2]     chrA    [11, 21]      *
   [3]     chrA    [31, 41]      *
   [4]     chrA    [51, 61]      *
   [5]     chrA    [71, 81]      *
   ...      ...         ...    ...
  [47]     chrA [911,  921]      *
  [48]     chrA [931,  941]      *
  [49]     chrA [951,  961]      *
  [50]     chrA [971,  981]      *
  [51]     chrA [991, 1000]      *
  -------
  seqinfo: 1 sequence from an unspecified genome
> 
> checkcount(2000, 50, c(chrA=1000, chrB=2000), spacing=15, right=-5, left=10)
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         4050          2146            27          1025           219           264 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         4050          4050            50             0           757          1003 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         4050          3562            48           438           580           767 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         4050          2058            27          1003           395             0 
GRanges object with 67 ranges and 0 metadata columns:
       seqnames      ranges strand
          <Rle>   <IRanges>  <Rle>
   [1]     chrA    [ 6, 11]      *
   [2]     chrA    [21, 26]      *
   [3]     chrA    [36, 41]      *
   [4]     chrA    [51, 56]      *
   [5]     chrA    [66, 71]      *
   ...      ...         ...    ...
  [63]     chrA [936,  941]      *
  [64]     chrA [951,  956]      *
  [65]     chrA [966,  971]      *
  [66]     chrA [981,  986]      *
  [67]     chrA [996, 1000]      *
  -------
  seqinfo: 1 sequence from an unspecified genome
> 
> checkcount(2000, 25, c(chrA=1000, chrB=2000), spacing=15, right=10, left=10, max.frag=200)
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         4025          2138            11           995           214           279 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         4025          4025            25             0           767           989 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         4025          3328            24           602           543           642 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         4025          2002            13           989           382             0 
GRanges object with 68 ranges and 0 metadata columns:
       seqnames      ranges strand
          <Rle>   <IRanges>  <Rle>
   [1]     chrA    [ 1, 11]      *
   [2]     chrA    [ 6, 26]      *
   [3]     chrA    [21, 41]      *
   [4]     chrA    [36, 56]      *
   [5]     chrA    [51, 71]      *
   ...      ...         ...    ...
  [64]     chrA [936,  956]      *
  [65]     chrA [951,  971]      *
  [66]     chrA [966,  986]      *
  [67]     chrA [981, 1000]      *
  [68]     chrA [996, 1000]      *
  -------
  seqinfo: 1 sequence from an unspecified genome
> 	
> # Checking out read extension for singles.
> 
> checkcount(1000, 0, c(chrA=1000, chrB=2000), spacing=20, ext=100)
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         2000          1073             0           493            99           154 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         2000          2000             0             0           353           513 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         2000          1726             0           240           267           384 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         2000           999             0           513           172             0 
GRanges object with 50 ranges and 0 metadata columns:
       seqnames     ranges strand
          <Rle>  <IRanges>  <Rle>
   [1]     chrA   [ 1,  1]      *
   [2]     chrA   [21, 21]      *
   [3]     chrA   [41, 41]      *
   [4]     chrA   [61, 61]      *
   [5]     chrA   [81, 81]      *
   ...      ...        ...    ...
  [46]     chrA [901, 901]      *
  [47]     chrA [921, 921]      *
  [48]     chrA [941, 941]      *
  [49]     chrA [961, 961]      *
  [50]     chrA [981, 981]      *
  -------
  seqinfo: 1 sequence from an unspecified genome
> 
> checkcount(2000, 50, c(chrA=1000, chrB=2000), spacing=50, ext=50)
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         4050          2135            33           984           196           301 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         4050          4050            50             0           783           982 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         4050          3544            41           445           573           773 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
         4050          2047            23           982           396             0 
GRanges object with 20 ranges and 0 metadata columns:
       seqnames     ranges strand
          <Rle>  <IRanges>  <Rle>
   [1]     chrA [  1,   1]      *
   [2]     chrA [ 51,  51]      *
   [3]     chrA [101, 101]      *
   [4]     chrA [151, 151]      *
   [5]     chrA [201, 201]      *
   ...      ...        ...    ...
  [16]     chrA [751, 751]      *
  [17]     chrA [801, 801]      *
  [18]     chrA [851, 851]      *
  [19]     chrA [901, 901]      *
  [20]     chrA [951, 951]      *
  -------
  seqinfo: 1 sequence from an unspecified genome
> 
> checkcount(5000, 10, c(chrA=1000, chrB=2000), spacing=25, ext=20)
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
        10010          5341             4          2477           535           733 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
        10010         10010            10             0          1892          2494 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
        10010          8532             9          1281          1365          1809 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
        10010          5055             7          2494           960             0 
GRanges object with 40 ranges and 0 metadata columns:
       seqnames     ranges strand
          <Rle>  <IRanges>  <Rle>
   [1]     chrA [  1,   1]      *
   [2]     chrA [ 26,  26]      *
   [3]     chrA [ 51,  51]      *
   [4]     chrA [ 76,  76]      *
   [5]     chrA [101, 101]      *
   ...      ...        ...    ...
  [36]     chrA [876, 876]      *
  [37]     chrA [901, 901]      *
  [38]     chrA [926, 926]      *
  [39]     chrA [951, 951]      *
  [40]     chrA [976, 976]      *
  -------
  seqinfo: 1 sequence from an unspecified genome
> 
> checkcount(5000, 20, c(chrA=1000, chrB=2000), spacing=25, ext=200)
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
        10020          5360            13          2479           543           727 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
        10020         10020            20             0          1880          2491 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
        10020          8630            15          1227          1383          1810 
  total.reads  mapped.reads        single mate.unmapped    unoriented     inter.chr 
        10020          5014             9          2491           962             0 
GRanges object with 40 ranges and 0 metadata columns:
       seqnames     ranges strand
          <Rle>  <IRanges>  <Rle>
   [1]     chrA [  1,   1]      *
   [2]     chrA [ 26,  26]      *
   [3]     chrA [ 51,  51]      *
   [4]     chrA [ 76,  76]      *
   [5]     chrA [101, 101]      *
   ...      ...        ...    ...
  [36]     chrA [876, 876]      *
  [37]     chrA [901, 901]      *
  [38]     chrA [926, 926]      *
  [39]     chrA [951, 951]      *
  [40]     chrA [976, 976]      *
  -------
  seqinfo: 1 sequence from an unspecified genome
> 	
> ###################################################################################################
> # Cleaning up.
> 
> unlink(dir, recursive=TRUE)
> 
> ###################################################################################################
> # End.
> 
> 
> 
> proc.time()
   user  system elapsed 
124.567   0.648 125.254 
