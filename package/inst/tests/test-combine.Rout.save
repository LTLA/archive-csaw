
R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-unknown-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # This tests the combining power of the combineTests function.
> 
> suppressWarnings(suppressPackageStartupMessages(require(csaw)))
> 
> comp <- function(total.n, n.clusters, weights=NULL) {
+ 	merged.ids <- sample(n.clusters, total.n, replace=TRUE)
+ 	tab <- data.frame(logFC=runif(total.n, -1, 1), logCPM=runif(total.n, -2, 1),
+ 		PValue=rbeta(total.n, 1, 10))
+ 	if (is.null(weights)) { weights <- rep(1, length.out=total.n) }
+ 	out <- combineTests(merged.ids, tab, weight=weights)
+ 
+ 	# Aggregating on the merging ID's to get average log-FC, average log-CPM.
+ 	almostidentical <- function(x, y, tol=1e-8) { 
+ 		if (length(x)!=length(y)) { return(FALSE) }
+ 		return(all(abs((x-y)/(x+y+1e-6)) < tol))
+ 	}
+ 	checker <- split(data.frame(tab, weight=weights), merged.ids)
+ 	ologfc <- sapply(checker, FUN=function(x) { weighted.mean(x$logFC, x$weight) })
+ 	if (!almostidentical(ologfc, out$logFC)) { stop("average log-FC's are not identical"); }
+ 	ologcpm <- sapply(checker, FUN=function(x) { weighted.mean(x$logCPM, x$weight) })
+ 	if (!almostidentical(ologcpm, out$logCPM)) { stop("average log-CPM's are not identical"); }
+    	
+ 	# Checking Simes.
+ 	osimes<-sapply(checker, FUN=function(x) {
+ 		o<-order(x$PValue)
+ 		min(x$PValue[o]/cumsum(x$weight[o])) * sum(x$weight)
+ 	})
+ 	if (!almostidentical(osimes, out$PValue)) { stop("combined p-values are not identical"); }
+ 	if (!almostidentical(p.adjust(osimes, method="BH"), out$FDR)) { stop("q-values are not identical"); }
+ 
+ 	# Checking the rownames.
+ 	if (!identical(rownames(out), as.character(sort(unique(merged.ids))))) { stop("row names are not matched"); }
+ 
+ 	# Checking if we get the same results after reversing the ids (ensures internal re-ordering is active).
+ 	re.o <- total.n:1
+ 	if (is.null(weights)) { 
+ 		out2<-combineTests(merged.ids[re.o], tab[re.o,])
+ 	} else {
+ 		out2<-combineTests(merged.ids[re.o], tab[re.o,], weight=weights[re.o])
+ 	}
+ 	if (!almostidentical(out$logFC, out2$logFC) || !almostidentical(out$logCPM, out2$logCPM)
+ 		|| !almostidentical(out$PValue, out2$PValue)) { stop("values not preserved after shuffling"); }
+ 
+ 	# Adding some tests if there's multiple log-FC's in 'tab'.
+ 	is.fc<-which(colnames(tab)=="logFC")
+ 	colnames(tab)[is.fc]<-"logFC.1"
+ 	tab$logFC.2<--tab$logFC.1
+     out<-combineTests(merged.ids, tab, weight=weights)
+ 	if (!almostidentical(ologfc, -out$logFC.2)) { stop("check failed for multiple log-FC columns") }
+ 
+ 	return(head(out))
+ }
> 
> ###################################################################################################
> 
> set.seed(2135045)
> suppressWarnings(suppressPackageStartupMessages(require(csaw)))
> 
> comp(20, 5)
     logFC.1    logFC.2      logCPM      PValue         FDR
1 -0.2484611  0.2484611 -0.77191102 0.046895637 0.098599042
2 -0.1664076  0.1664076 -0.01192032 0.090308125 0.112885156
3 -0.1607317  0.1607317 -0.45691327 0.059159425 0.098599042
4  0.1369093 -0.1369093 -0.72242504 0.001563347 0.007816734
5 -0.6281226  0.6281226  0.63571913 0.158769678 0.158769678
> comp(20, 10)
      logFC.1      logFC.2     logCPM     PValue        FDR
1 0.371500736 -0.371500736  0.3072375 0.08566207 0.13073335
2 0.102348874 -0.102348874 -0.7052655 0.02123949 0.09879471
3 0.769378738 -0.769378738 -0.5316614 0.02195438 0.09879471
4 0.152077822 -0.152077822 -0.3913887 0.08715557 0.13073335
5 0.014150564 -0.014150564 -1.1075002 0.05147780 0.13073335
7 0.001258857 -0.001258857 -0.5130758 0.07291837 0.13073335
> comp(20, 20)
      logFC.1     logFC.2      logCPM       PValue         FDR
1 -0.68673085  0.68673085 -0.24738576 0.0001792533 0.002330293
2 -0.03245079  0.03245079 -1.38578188 0.0378314613 0.089264747
4 -0.12785892  0.12785892  0.61970503 0.1254991203 0.156087234
6  0.26001610 -0.26001610 -0.99417686 0.1688019017 0.182868727
7  0.96384702 -0.96384702 -1.58000007 0.0558134032 0.103653463
8  0.09383978 -0.09383978 -0.00646653 0.0342445869 0.089264747
> comp(20, 5, weights=runif(20))
     logFC.1    logFC.2       logCPM     PValue       FDR
1 -0.5463791  0.5463791 -0.695881010 0.11236636 0.1872773
2 -0.2265566  0.2265566 -1.909763102 0.04134577 0.1872773
3  0.1033206 -0.1033206 -0.487461971 0.08815398 0.1872773
4  0.6167912 -0.6167912  0.002988424 0.18933200 0.1893320
5 -0.1196669  0.1196669 -1.261799416 0.18681023 0.1893320
> comp(20, 10, weights=runif(20))
     logFC.1    logFC.2     logCPM      PValue        FDR
1 -0.5384310  0.5384310  0.1972271 0.006603425 0.04034856
2 -0.3988949  0.3988949  0.5037433 0.281183454 0.28118345
3  0.3498704 -0.3498704 -1.5138354 0.219478507 0.25083258
4  0.5838569 -0.5838569 -0.8630313 0.084964294 0.16992859
7  0.2045142 -0.2045142  0.8596573 0.074037904 0.16992859
8  0.2180588 -0.2180588 -0.3455245 0.010087140 0.04034856
> comp(20, 20, weights=runif(20))
     logFC.1    logFC.2      logCPM     PValue        FDR
1  0.7000281 -0.7000281  0.73118905 0.03246600 0.09823301
2 -0.6119763  0.6119763 -0.82343098 0.02259435 0.09823301
3  0.2771616 -0.2771616 -0.67152098 0.12052589 0.14417166
4  0.5717632 -0.5717632 -0.60301060 0.01252971 0.08770799
5  0.8770086 -0.8770086 -1.75246571 0.04524222 0.09823301
7 -0.6594015  0.6594015 -0.01945981 0.13577439 0.14621857
> 
> comp(100, 50)
      logFC.1     logFC.2      logCPM      PValue        FDR
1 -0.24104762  0.24104762 -0.44369972 0.089705475 0.13919815
2  0.44591327 -0.44591327 -1.26811032 0.001842072 0.04269943
3 -0.43414240  0.43414240 -1.08191381 0.035861917 0.10055887
4  0.62649780 -0.62649780  0.04165325 0.111963357 0.15744847
5  0.03212285 -0.03212285 -1.34266994 0.036241239 0.10055887
6  0.28125304 -0.28125304 -1.16924060 0.101363739 0.14714091
> comp(100, 100)
      logFC.1     logFC.2     logCPM     PValue       FDR
1  0.05275637 -0.05275637 -0.7709474 0.11865752 0.1480689
2  0.71441025 -0.71441025 -1.3785686 0.01668844 0.1205360
5  0.26399171 -0.26399171 -1.2352076 0.05135064 0.1297436
6  0.89891833 -0.89891833 -0.3872641 0.16529938 0.1815583
7  0.53794982 -0.53794982  0.1221685 0.04890242 0.1297436
8 -0.85502755  0.85502755 -1.4670118 0.05965313 0.1297436
> comp(100, 200)
        logFC.1      logFC.2     logCPM      PValue       FDR
4  -0.191162748  0.191162748  0.1876694 0.007479345 0.0817267
8  -0.266704402  0.266704402  0.4492545 0.060360011 0.1222677
11  0.471280159 -0.471280159  0.2015327 0.118006172 0.1631702
12  0.190635123 -0.190635123 -0.8720322 0.047170549 0.1174263
17 -0.009836053  0.009836053  0.4296132 0.028368229 0.1150337
19  0.977950204 -0.977950204 -1.9214763 0.188204858 0.2036738
> comp(100, 50, weights=runif(100))
     logFC.1    logFC.2     logCPM       PValue          FDR
1 -0.2839711  0.2839711 -0.4520745 1.916808e-02 0.0575042271
2 -0.5998730  0.5998730 -0.4974020 6.913723e-03 0.0527901746
3  0.2060324 -0.2060324 -0.3614897 4.434143e-03 0.0527901746
4  0.4867522 -0.4867522 -0.4754546 1.818245e-05 0.0007636627
5  0.2418806 -0.2418806 -0.6105290 1.335984e-01 0.1558648437
6  0.3291481 -0.3291481 -0.5470106 1.251378e-02 0.0527901746
> comp(100, 100, weights=runif(100))
     logFC.1    logFC.2      logCPM     PValue        FDR
1  0.5846380 -0.5846380 -0.71625995 0.19143405 0.20040752
2  0.5878939 -0.5878939 -0.52558901 0.06482594 0.11738751
3 -0.9905919  0.9905919 -1.23089331 0.03554859 0.09896519
5  0.1598775 -0.1598775 -0.22711139 0.12830975 0.14821989
6 -0.8520274  0.8520274  0.67809776 0.08487776 0.12278691
9 -0.3802134  0.3802134 -0.03823043 0.03332139 0.09896519
> comp(100, 200, weights=runif(100))
      logFC.1   logFC.2      logCPM     PValue        FDR
2  -0.6811963 0.6811963  0.33887710 0.30578131 0.32166606
4  -0.5989850 0.5989850  0.66129609 0.03041033 0.09473986
10 -0.7751920 0.7751920 -1.93874949 0.04269155 0.10918156
14 -0.7437901 0.7437901 -0.05971616 0.38905122 0.39391436
17 -0.2471966 0.2471966 -0.77262183 0.12005827 0.17917962
18 -0.3230246 0.3230246  0.40137400 0.17451026 0.21097509
> 
> comp(1000, 50)
      logFC.1     logFC.2     logCPM     PValue       FDR
1  0.13682366 -0.13682366 -0.1467003 0.01750715 0.1068241
2  0.16733418 -0.16733418 -0.4398554 0.02350661 0.1068241
3  0.06387312 -0.06387312 -0.6003121 0.08391142 0.1125694
4 -0.18806714  0.18806714 -0.5990342 0.01691093 0.1068241
5  0.12597999 -0.12597999 -0.7510115 0.06963214 0.1068241
6 -0.12645747  0.12645747 -0.1926523 0.09005554 0.1125694
> comp(1000, 100)
       logFC.1      logFC.2     logCPM     PValue        FDR
1  0.174120261 -0.174120261 -0.6738346 0.01562177 0.07090863
2  0.168010883 -0.168010883 -0.6922139 0.07683830 0.10419117
3  0.080601920 -0.080601920 -0.7507711 0.12468664 0.13552896
4 -0.150350744  0.150350744 -0.6913354 0.07710147 0.10419117
5 -0.069252211  0.069252211 -0.3723081 0.05258395 0.09263846
6 -0.006396196  0.006396196 -0.3368472 0.03080045 0.08472832
> comp(1000, 200)
        logFC.1       logFC.2     logCPM      PValue       FDR
1  0.0308734522 -0.0308734522 -0.4586882 0.059332835 0.1178462
2 -0.0126538901  0.0126538901 -0.5437118 0.074244453 0.1197491
3  0.0009290703 -0.0009290703 -0.5493148 0.071559901 0.1197491
4 -0.0538280630  0.0538280630 -0.6108927 0.051208772 0.1178462
5  0.2271845077 -0.2271845077 -0.5725624 0.053468067 0.1178462
6  0.1803726591 -0.1803726591  0.5290900 0.006880156 0.1104780
> comp(1000, 50, weights=runif(1000))
       logFC.1      logFC.2     logCPM     PValue       FDR
1  0.008725185 -0.008725185 -0.4951465 0.05347290 0.1098969
2 -0.238999061  0.238999061 -0.5137052 0.20057417 0.2085245
3  0.080476276 -0.080476276 -0.4557432 0.11570829 0.1328155
4 -0.124759127  0.124759127 -0.2284316 0.02372177 0.1098969
5  0.110846496 -0.110846496 -0.4685301 0.20707905 0.2085245
6  0.132884483 -0.132884483 -0.2918869 0.05322306 0.1098969
> comp(1000, 100, weights=runif(1000))
      logFC.1     logFC.2      logCPM      PValue        FDR
1  0.12689651 -0.12689651 -0.75952992 0.006971270 0.07201722
2 -0.11127547  0.11127547 -0.66374927 0.007044645 0.07201722
3 -0.03070684  0.03070684 -0.17476703 0.028432859 0.08905268
4 -0.48351421  0.48351421 -0.36490293 0.097732381 0.13094819
5 -0.41606233  0.41606233  0.04949216 0.041918991 0.09527043
6  0.02562862 -0.02562862 -0.51676796 0.102139589 0.13094819
> comp(1000, 200, weights=runif(1000))
      logFC.1     logFC.2     logCPM     PValue       FDR
1  0.20291978 -0.20291978 -0.5058035 0.03838360 0.1211986
2 -0.01459244  0.01459244 -0.6673185 0.16941281 0.1837216
3 -0.07181492  0.07181492 -0.3166304 0.03563950 0.1211986
4  0.49259818 -0.49259818 -1.0823205 0.06549842 0.1241610
5  0.05117542 -0.05117542 -0.5835729 0.06174217 0.1241610
6 -0.53617856  0.53617856 -0.3117318 0.09502387 0.1434693
> 
> ###################################################################################################
> ###################################################################################################
> ###################################################################################################
> # End.
> 
> 
> proc.time()
   user  system elapsed 
  8.929   0.114   9.095 
